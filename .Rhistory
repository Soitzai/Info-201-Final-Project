inputId = "state",
label = "State Selection",
choices = list(
"Illinois" = "IL",
"Indiana" = "IN",
"Michigan" = "MI",
"Ohio" = "OH",
"Wisconsin" = "WI"
)
),
# select widget by colors
selectInput(
inputId = "select2",
label = "Color Selection",
choices = list(
"Green" = "green",
"Purple" = "purple",
"pink" = "pink"
)
)
),
mainPanel(
plotOutput("state")
)
)
)
)
)
shinyUI(ui)
runApp('Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/6c5db4feb9a2b3ddc79a7de4d3c8a331/Message/MessageTemp/33aefa88b97308f19f269184c8cf9f78/File')
library(shiny)
library(dplyr)
library(plotly)
parking_map <- data_set_frame %>%
group_by(city, state, lat, long) %>%
summarise(count = n(), total_killed = sum(num_killed),
total_injured = sum(num_injured)) %>%
mutate(total_shooting = total_killed + total_injured)
geo_base <- list(
scope = "usa",
projection = list(type = "albers usa"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
shooting_plot <- plot_geo(shooting_map, locationmode = "USA-states",
sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~total_shooting,
text = ~paste(shooting_map$city, ",", shooting_map$state,
"<br /> Number of Shootings: ", shooting_map$count,
"<br /> Number of People Injured: ",
shooting_map$total_injured,
"<br /> Number of People Killed:", shooting_map$total_killed)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking-citations.csv")
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking-citations.csv")
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking-citations.csv")
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking-citations.csv")
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
shootings <- read.csv("parking.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/info_201/a5-oliviaanyuhua")
library(dplyr)
library(plotly)
shootings <- read.csv("parking.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
shootings <- read.csv("parking.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
shootings <- read.csv("parking.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/info_201/Info-201-Final-Project")
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
View(data)
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999)
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "usa",
projection = list(type = "albers usa"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "USA-states",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
parking_plot
View(parking_map)
parking_map <- data %>%
filter(Latitude != 99999)
group_by(Latitude, Longitude) %>%
summarise(count = n())
parking_map <- data %>%
filter(Latitude != 99999)
group_by(Latitude, Longitude) %>%
summarise(count = n())
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "usa",
projection = list(type = "albers usa"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "USA-states",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
parking_plot
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "usa",
projection = list(type = "albers usa"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
parking_plot
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "la",
projection = list(type = "albers la"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
parking_plot
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "la",
projection = list(type = "albers la"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
p <- parking_map %>%
plot_mapbox(x = ~Longitude, y = ~Latitude,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='name') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
geo_base <- list(
scope = "la",
projection = list(type = "albers la"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
p <- parking_map %>%
plot_mapbox(x = ~Longitude, y = ~Latitude,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='name') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
p
Longitude
View(parking_map)
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
group_by(Latitude, Longitude) %>%
summarise(count = n())
p <- parking_map %>%
plot_mapbox(x = ~Longitude, y = ~Latitude,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='count') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
geo_base <- list(
scope = "la",
projection = list(type = "albers la"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
p
View(shooting_map)
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
# Summary
num_shoot <- nrow(shootings)
live_lost <- sum(shootings$num_killed)
most_impacted <- shootings %>%
mutate(total_impact = num_injured + num_killed)
most_impacted_city <- most_impacted %>%
group_by(city) %>%
summarise(state = state[1], impact = sum(total_impact)) %>%
arrange(-impact)
most_impacted_state <- most_impacted %>%
group_by(state) %>%
summarise(impact = sum(total_impact)) %>%
arrange(-impact)
# Summary Table
table <- most_impacted_city %>%
group_by(state) %>%
filter(impact == max(impact)) %>%
subset(select = c(2, 1, 3))
# Description of a particular incident
data_interest <- shootings %>%
filter(city == "Fort Wayne", date == "November 22, 2018")
# An interactive map
shooting_map <- shootings %>%
group_by(city, state, lat, long) %>%
summarise(count = n(), total_killed = sum(num_killed),
total_injured = sum(num_injured)) %>%
mutate(total_shooting = total_killed + total_injured)
geo_base <- list(
scope = "usa",
projection = list(type = "albers usa"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
shooting_plot <- plot_geo(shooting_map, locationmode = "USA-states",
sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~total_shooting,
text = ~paste(shooting_map$city, ",", shooting_map$state,
"<br /> Number of Shootings: ", shooting_map$count,
"<br /> Number of People Injured: ",
shooting_map$total_injured,
"<br /> Number of People Killed:", shooting_map$total_killed)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
# plot of choice
state_plot <- plot_ly(most_impacted_state, x = most_impacted_state$impact,
y = most_impacted_state$state,
text = paste(most_impacted_state$state,
"<br /> Number of Shootings:",
most_impacted_state$impact),
type = "bar") %>%
layout(title = "State Total Shooting",
xaxis = list(title = "Number of Shootings"),
yaxis = list(title = "States"))
View(shootings)
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
# Summary
num_shoot <- nrow(shootings)
live_lost <- sum(shootings$num_killed)
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/info_201/a5-oliviaanyuhua")
library(dplyr)
library(plotly)
shootings <- read.csv("data/shootings-2018.csv", stringsAsFactors = FALSE)
# Summary
num_shoot <- nrow(shootings)
live_lost <- sum(shootings$num_killed)
View(shootings)
setwd("~/Desktop/info_201/Info-201-Final-Project")
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 10000, long = Longitude / -10000)
group_by(Latitude, Longitude) %>%
summarise(count = n())
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 10000, long = Longitude / -10000)
group_by(lat, long) %>%
summarise(count = n())
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 10000, long = Longitude / -10000) %>%
group_by(lat, long) %>%
summarise(count = n())
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 100000, long = Longitude / -100000) %>%
group_by(lat, long) %>%
summarise(count = n())
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 100000, long = Longitude / -100000) %>%
group_by(lat, long) %>%
summarise(count = n())
p <- parking_map %>%
plot_mapbox(lat = ~lat, lon = ~longt,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='count') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
geo_base <- list(
scope = "la",
projection = list(type = "albers la"),
showland = TRUE,
landcolor = toRGB("GRAY")
)
parking_plot <- plot_geo(parking_map, locationmode = "Los Angeles",
sizes = c(1, 250)) %>%
add_markers(
x = ~Longitude, y = ~Latitude, size = ~count,
text = ~paste("Tickets", parking_map$count)
) %>%
layout(title = "2018 USA Shooting Map", geo = geo_base)
p
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 100000, long = Longitude / -100000) %>%
group_by(lat, long) %>%
summarise(count = n())
p <- parking_map %>%
plot_mapbox(lat = ~lat, lon = ~long,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='count') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
p
library(shiny)
library(dplyr)
library(plotly)
data <- read.csv("parking.csv", stringsAsFactors = FALSE)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2xpdmlhYW4iLCJhIjoiY2p0NTUzZmhkMDJzMjRhcXhwbjMxOWIzcCJ9.fDprJTRx1fGX5X3yHkGD6Q')
# data <- read.csv("parking-citations.csv", stringsAsFactors = FALSE)
parking_map <- data %>%
filter(Latitude != 99999) %>%
mutate(lat = Latitude / 100000, long = Longitude / -100000) %>%
group_by(lat, long) %>%
summarise(count = n())
p <- parking_map %>%
plot_mapbox(x = ~lat, y = ~long,
split = ~class, size=2,
mode = 'scattermapbox', hoverinfo='count') %>%
layout(title = 'Meteorites by Class',
font = list(color='white'),
plot_bgcolor = '#191A1A', paper_bgcolor = '#191A1A',
mapbox = list(style = 'dark'),
legend = list(orientation = 'h',
font = list(size = 8)),
margin = list(l = 25, r = 25,
b = 25, t = 25,
pad = 2))
p
View(parking_map)
