geom_point(mapping = aes(x = dat$gdp_per_capita...., y = dat$n),
size = 1,
color = "purple") +
labs(x = "GDP per capita in each country", y = "suicides per 100k population", title = "title")
runApp()
lm(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
abline(lm(gdp_per_capita....~n, data=dat))
for (i in 1:5) {
plot(score~midterm_data[,i], data=midterm_data)
abline(lm(score~midterm_data[,i], data=midterm_data))
}
dat <- data %>%
filter(year == 2013) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
lm(n~gdp_per_capita...., data=dat)
dat <- data %>%
filter(year == 2015) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1987) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1985) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1986) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1987) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1988) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 1989) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 2000) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
dat <- data %>%
filter(year == 2010) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
plot(n~gdp_per_capita...., data=dat)
abline(lm(n~gdp_per_capita...., data=dat))
runApp()
runApp()
for (i in 1:5) {
plot(score~midterm_data[,i], data=midterm_data)
abline(lm(score~midterm_data[,i], data=midterm_data))
}
abline(lm(score~midterm_data[,i], data=midterm_data))
abline(lm(score~midterm_data[,i], data=midterm_data))
runApp()
runApp()
runApp()
runApp()
lm <- lm(gdp_per_capita....~n, data = dat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
chartData_all <- data %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
runApp()
chartData_group <- data %>%
filter(age == input$radio) %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
chartData_group <- data %>%
filter(age == "all age group") %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
chartData_all <- data %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
chartData <- ifelse(input$radio == "all age group",chartData_all,chartData_group)
chartData <- ifelse("input$radio" == "all age group",chartData_all,chartData_group)
chartData
runApp()
runApp()
runApp()
runApp()
runApp()
chartData_all
chartData
chartData <- data %>%
filter(age == input$radio) %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
runApp()
chartData <- data %>%
filter(age == "75+ years") %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
chartData
View(chartData)
View(chartData_all)
runApp()
input$radio <- "25-34 years"
inputradio <- "25-34 years"
chartData <- data %>%
filter(age == inputradio) %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
chartData_all <- data %>%
group_by(sex, year) %>%
summarise(n = sum(suicides.100k.pop)) %>%
select(year, n, sex)
if (inputradio == "all age group") {
chartData <- chartData_all
}
chartData_female <- chartData %>%
filter(sex == "female")
chartData_male <- chartData %>%
filter(sex == "male")
charTitle <- switch(input$radio,
"5-14 years" = "5 - 14 age group",
"15-24 years" = "15-24 age group",
"25-34 years" = "25-34 age group",
"35-54 years" = "35-54 age group",
"55-74 years" = "55-74 age group",
"75+ years" = "75+ age group",
"all age" = "all age group")
runApp()
runApp()
dat <- data %>%
filter(data[, 1] == input$select) %>%
filter(year >= input$year_second[1], year <= input$year_second[2])
dat <- data %>%
filter(data[, 1] == input$select) %>%
filter(year >= 1985, year <= 2015)
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015)
dat
p <- plot_ly(dat, x = ~year, y = ~suicides_no, type = "scatter", mode = "lines")
p
chart_link = api_create(p, filename = "line-basic")
Sys.setenv("plotly_username"="laihuixin")
Sys.setenv("plotly_api_key"="laiwaiyan")
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015)
p <- plot_ly(dat, x = ~year, y = ~suicides_no, type = "scatter", mode = "lines")
chart_link = api_create(p, filename = "line-basic")
Sys.setenv("plotly_api_key"="sQBsIiSHB3WpvrGXq3qj")
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015)
p <- plot_ly(dat, x = ~year, y = ~suicides_no, type = "scatter", mode = "lines")
chart_link = api_create(p, filename = "line-basic")
chart_link
runApp()
runApp()
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
dat
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~suicides_no, color = ~age)
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
runApp()
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~n, color = ~age)
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~n, color = ~age, type = "scatter", mode = "lines")
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~n, color = ~year, type = "scatter", mode = "lines")
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~n, type = "scatter", mode = "lines")
p
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year, age) %>%
summarise(n = sum(suicides_no))
p <- plot_ly(dat, x = ~year, y = ~n, type = "scatter")
p
p <- plot_ly(dat, x = ~year, y = ~n, colors = ~c("red"))
p
p <- plot_ly(dat, x = ~year, y = ~n)
p
p <- plot_ly(dat, x = ~year, y = ~n, type = "scatter", mode = "lines")
p
p <- plot_ly(dat, x = ~year, y = ~n, type = "scatter")
p
p <- plot_ly(dat, x = ~year, y = ~n, color = ~year, size = ~year)
p
runApp()
dat
dat <- data %>%
filter(data[, 1] == "United States") %>%
filter(year >= 1985, year <= 2015) %>%
group_by(year) %>%
summarise(n = sum(suicides_no))
dat
plot(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), xlab = "Year", ylab = "number",
main = "title", pch=16)
line(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), pch=16)
line(dat$year, dat$n, pch=16)
lines(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), pch=16)
plot(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), xlab = "Year", ylab = "number",
main = "title", color = "red", pch=16)
plot(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), xlab = "Year", ylab = "number",
main = "title", colors("red"), pch=16)
ggplot(dat, aes(year, n))
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity")
lines(dat$year, dat$n, xlim = range(dat$year), ylim = range(dat$n), pch=16)
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line()
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line(year, n)
ggplot(dat, aes(year, n))  +
geom_line()
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line()
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line(color = "red") +
})
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line(color = "red") +
})
ggplot(dat, aes(year, n)) +
geom_point(stat = "identity") +
geom_line(color = "red")
runApp()
chartData
dat
data
runApp()
country_list
unique(country_list)
runApp()
runApp()
country_list
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
datset <- c()
runApp()
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
}
lm(dat, n~gdp_per_capita)
i <- 1985
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
lm(dat, n~gdp_per_capita)
lm(n~gdp_per_capita...., data = dat)
lm(n~gdp_per_capita...., data = dat)[1]
lm(n~gdp_per_capita...., data = dat)[1][1]
lm(n~gdp_per_capita...., data = dat)$coefficients
lm(n~gdp_per_capita...., data = dat)$coefficients["(gdp_per_capita...."]
res <- lm(n~gdp_per_capita...., data = dat)
res
res$coefficients[2]
as.numeric(res$coefficients[2])
datset[i-1984] <- as.numeric(res$coefficients[2])
datset
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i-1984] <- as.numeric(res$coefficients[2])
}
datset
runApp()
plot(1985:2015, dat)
length(1985:2015)
length(dat)
dat
plot(1985:2015, datset)
plot(datset)
datset <- c()
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i] <- as.numeric(res$coefficients[2])
}
plot(datset)
plot(datset, xlim = 1985:2015)
plot(datset, xlim = c(1985:2015))
datset <- c()
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i-1984] <- as.numeric(res$coefficients[2])
}
plot(datset)
runApp()
as.list(datset)
is.list(datset)
is.vector(datset)
plot(c(1985:2015), datset, col="bule")
datset
plot(c(1985:2015), as.list(datset), col="bule")
plot(c(1985:2015), as.vector(datset), col="bule")
datset
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i] <- as.numeric(res$coefficients[2])
}
plot(datset)
datset <- c()
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i] <- as.numeric(res$coefficients[2])
}
plot(datset)
plot(datset, xlim = c(1985,2015))
plot(datset, xlim = c(1985,2015), col = "blue")
plot(datset, xlim = c(1985,2015), pch = 15, col = "blue")
runApp()
plot(datset, xlim = c(1985,2015), xlab = "Year",
ylab = "slope", main = "slope of regression line V.S. ", pch = 15, col = "blue")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
library(lint)
library("lint")
library("lint")
library("lintr")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
lint("ui.R")
gdp_range <- range(data$gdp_per_capita)
lint("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
lint("ui.R")
shiny::runApp()
lint("ui.R")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
lint("ui.R")
library(lintr)
lint("ui.R")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
lint("ui.R")
library("lintr")
lint("ui.R")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
library("lintr")
lint("ui.R")
shiny::runApp()
lint("ui.R")
library("lintr")
lint("ui.R")
setwd("~/")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
lint("ui.R")
library("lintr")
setwd("~/Desktop/uw/5-winter2019/info201/Info-201-Final-Project")
lint("ui.R")
shiny::runApp()
runApp()
runApp()
runApp()
# get the comparison plot from a source file
return(get_comparison_plot(data))
get_comparison_plot(data)
get_comparison_plot <- function(data) {
# save all the slope representing the correlation over time in a
# datastructure
datset <- c()
# loop over the data based on year
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i] <- as.numeric(res$coefficients[2])
}
# plot the data and well labeled the graph
plot(datset, xlim = c(1985,2015), xlab = "Year",
ylab = "slope", main = "slope of regression line in each year", pch = 15, col = "blue")
return(com_plot)
}
get_comparison_plot <- function(data) {
# save all the slope representing the correlation over time in a
# datastructure
datset <- c()
# loop over the data based on year
for (i in 1985:2015) {
dat <- data %>%
filter(year == i) %>%
group_by(country, year, gdp_per_capita....) %>%
summarise(n = sum(suicides.100k.pop))
res <- lm(n~gdp_per_capita...., data = dat)
datset[i] <- as.numeric(res$coefficients[2])
}
# plot the data and well labeled the graph
plot(datset, xlim = c(1985,2015), xlab = "Year",
ylab = "slope", main = "slope of regression line in each year", pch = 15, col = "blue")
}
get_comparison_plot(data)
runApp()
